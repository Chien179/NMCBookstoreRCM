# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.24.0
# source: user.sql
from typing import AsyncIterator, Iterator

import sqlalchemy
import sqlalchemy.ext.asyncio

from src.db.sqlc.user import models


GET_USERS = """-- name: get_users \\:many
SELECT username
FROM users
"""


class Querier:
    def __init__(self, conn: sqlalchemy.engine.Connection):
        self._conn = conn

    def get_users(self) -> Iterator[str]:
        result = self._conn.execute(sqlalchemy.text(GET_USERS))
        for row in result:
            yield row[0]


class AsyncQuerier:
    def __init__(self, conn: sqlalchemy.ext.asyncio.AsyncConnection):
        self._conn = conn

    async def get_users(self) -> AsyncIterator[str]:
        result = await self._conn.stream(sqlalchemy.text(GET_USERS))
        async for row in result:
            yield row[0]
